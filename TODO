  ####################
##### THE TAKE OVER #####
   ####################

*** Add delta GT as qual measure for 2nd best GT 

*** Output early and late grid image

*** Check if center of mass of blob skips much

*** Several QC interfer /use same model

*** Make setup suggest manual installing odfpy etc

--

**  RPC needs to accumulate job information until requested but still
    not get too much.

    Latest status except messages, messages should stay util pulled
    status after job stopped

Server shutdown is not terminating ongoing jobs

---
* Planning import

** Read csv type files.

	Could text ods/xl*

** UI for program used.

*** 1:1 / 3:1

*** File Selections

*** Storing information in some file?

---
* Live view of growth

** Show curve using some curve viewer
	
*** Select curve from heatmap

---
* Serialize feature extraction

---

* RPC

	RPC Exposes to Client:

		getFreeScanners()
		getScannerInfo(scanner)
		getScannerStatus(scanner)
		startScanner(userId, scanner)
		stopScanner(userId, scanner)
		pauseScanner(userId, scanner)
		resumeScanner(userId, scanner)

		setScannerStatus(userId, scanner, kwargs)

		---

		enqueueAnalysis(userId, kwargs)
		
		---

		enqueueRebuild(userId, kwargs)

  ##########################
##### THE WHAT NEXT PLACE #####
   ##########################

--- HOT ---

*** Test blob position over time of analysis.

	* If static, test static blob.

*** FIRST PASS needs to store DPI setting because analysis needs to know how
    to scale history and default expectencies accordingly.

        - Recording should work, but analysis needs compatibilities....

*** GRIDDING:  Increase robustness when few edgecolonies

*** GRIDDING: Check effect of heuristics on bad grids

*** ALL: Rotate and flip image display so that it matches the user perspective
    GOOD DISPLAY:
        self.image_ax.imshow(np.fliplr(model['im']), cmap=plt.cm.Greys_r, 
            origin='lower',
    NEED:
        fix all other... make a lr-display-value converter eg. im.shape[0] - x

--- DEBUGGING ---

--- GUI ---


--- SPACE-TRANSITIONS ---

*** The 'Pixel Value Space' to 'Kodak Value Space' could use the advanced 
    algorithm

--- BLOB-DETECTION ---

*** New structure needed for all the grid cell abstract layers (Blob, Bg, Trash, Cell)

*** Do a check on BG to throw out outliers from the BG into trash

*** Let the subtracted BG be a plane and not a single value.

    Exists for GRIDDING

*** The iterative roundness test could use the threshold of otsu as start
    and could use fsolve too!

*** Use where previous blob was detected!

*** Think about finding a good level of a thresholded image for blobedge

*** http://scipy-lectures.github.com/advanced/image_processing/index.html

*** http://www.scipy.org/Cookbook/Least_Squares_Circle

--- OTHER ---

*** Most fungii see blue light at 450 nm - How is the pattern of our lamp??

*** Think about PIL I16 support
    http://old.nabble.com/import-16-bit-tiff---byte-order-problem--td20374391.html
    http://blog.philippklaus.de/2011/08/handle-16bit-tiff-images-in-python/

*** Checking of space left on HD


  ###########################################
##### OUTDATED DUE TO SWITCH TO NEW METHODS #####
   ###########################################

*** Add server shutdown to config with warning

*** Investigate resolving equal grid start pos with using most 
    centric, and using the R-value as well...(some missed peaks will
    affect placement)

*** Gray-scale fails to analyse at 150 dpi

*** The Analyse One GUI have strange behaviour in why extra im-array is
    needed to have toggling between Cell Estimate and Kodak

*** gui_anal.. 623 f_sel....mark(... -> r_fixt 120 Xs, Ys set.A.find... -> None not iterable

*** Make Analyse One use the grid if one pleases...

*** Make scanner-queue lay outside program so several instances of program
    will be OK.

(*** Extend functionality in fixture view (Gray-scale values)
    Status: Begun. Something wrong in fixture)

*** Extend functionality in config view

(*** Use a queue for all things to be done and a scheduler)

  ###################################
##### HALL OF COMPLETIONLIKE STATE #####
   ###################################

*** Extend server communicativeness

*** Improve Err MSG with bad analysis dir

*** Make status label have centric elipsis

**	QC UI:

		v Import meta-data

		v Group selection sliders

			for each phenotype min max range for selecting outliers.
				After sliding allow manual toggling of selection

        v Undo

*** Plot InitialValVsTimeOfGT

*** New Phenotypes to conscider:

	* Warringer's Lag initial value
	* #Cells @ GT
	* End cells
	* Yield
	* #Cells @48h

***	In badness, use same strain variation and deviation from strain mean as
	badness indicator.

*** Should more than GT be taken into account in norming (initial value)

*** Should splining be done on missing reference points before data points

*** Use logged values for norm?

*** LeastSQ init-vals surf (clean nan)  GTref == a * (IV * b - IVmean)
	as norm surface

*** Signal to noise ratio in ref warnings and warning for few refs left

*** Median filter instead of gauss at end?

*** Move median-filter to after laplace?

*** Allow disabling of steps in norm

*** Linear regression of early points to get T=0 deposition. 

    Make 3-5 first value measures to compare

*** Remake ods to have "Ref" as strain for ref-positions

***	Saving heatmap image destroys connection with phenotype and plates
	changes

***	Plotting curve should not have y-axis depend on GT-reg line

***	Controls on triplicate is YPS 128 not s288c

*** Phenotyper is not striding the data correctly it seems.

*** RPC stuff

		stopRebuild(userId, rebuild)
		pauseRebuild(userId, rebuild)
		resumeRebuild(userId, rebuild

		getRebuildsInfo()

		---

		enqueueFeatures(userId, kwargs)
		getFeaturesInfo()

		---
		getAnalysesInfo()
	
		stopAnalysis(userId, analysis)
		pauseAnalysis(userId, analysis)
		resumeAnalysis(userId, analysis)
	SubprocEffector Shows Available methods for pipes

	RPC -> Subproc: [subprocEffectorMethod, kwargs]
	
	Common to all SubprocEffectors:

		X Start
		X Stop
		X Pause
		X Status (reciprokes by sending status dict)


*** Scanner selection is still awkward... (only one scanner per program I think

*** SUBPROCS

	There's a problem with reconnecter makes it look like locked scanners
	are alive for a short while even without subprocs.

*** Proc Phenotypes:	Keep with names

*** Proc Phenotypes:	Multiphenotype-support

*** Proc Phenotypes:	Regret removed

*** Gridding SVG: Mark 0,0 position

*** XML: Write proper d-types and compartments data in XML meta data header

*** Proc Phenotypes:	LSC

*** Proc Phenotypes:	Ref-array

*** Proc Phenotypes:	Save everything

*** Hide/Remove the fixture "Fixture" that gets autocreated.

*** ANALYSE ONE should give visual warning when capping

    * GUI is there, just need to thread analysis

*** FIX random startup-crash:

    [xcb] Unknown request in queue while dequeuing
    [xcb] Most likely this is a multi-threaded client and XInitThreads has not been called
    [xcb] Aborting, sorry about that.

*** Is there something odd with number of cells??

*** Show projects not checked after analysis

*** Transfer file over LAN (Filezilla connect in place and resource for TCPtransfer)

*** Check so not orphanining on shutdown

*** Delete fixture

*** Make EXPERIMENT ONE be unsaved after power-up and saved on complete

*** PLATE SECTIONING: Im overflow by rounding or mass center shift

*** 1st Pass Run, check how records Image Shape!

*** LAN-PM 1: Init takes some time, should only need to test once per PM and not
    per socket <- scanner should get socket, not get pm!

    * Should be faster while above still not fixed

*** LAN-PM 2: If host does not exist the urltimeout is too long, maybe also run
    seperate thread anyhow.

*** STARTUP: Reconnect to subprocs and clean up if needed

    * Half-done, progress for running experiment doesn't look nice and
    probably don't work correctly (psm should be filled out)

    * More-done, progress-bar is not correct on revive, but much info is retrieved

*** EXPERIMENT progress bar seems to count wrong

*** SANE should discover scanner better

*** EXPERIMENT ONE: The gui run all return red on power down?

*** EXPERIMENT ONE: Make GUI not HANG

*** Make shortcut doesn't work

*** EXPERIMENT Check that progressbar is nice
        just make it go on estimated time

*** New Scanner Lock not emptied

*** SUBPROCS ANALYSIS: Make possiblility of inspecting gridding

*** GRIDDING isn't reliable

*** FIXTURE: All should use path-resource to get filenames

*** GLOBALS for diff version compatibility -> resourceCONFIG

*** FIX INCOMPATIBILITY IMAGE SECTIONS

*** ANALYSE: Cut Cell Estimate at 2000 and warn

*** ANALYSE: Loading CSV messes up columns in display

*** INSTALL DESKTOP ICON

*** DIALOGUE: Sel dir should start in fit place

*** ASK QUIT: Doesn't work

*** MAIN: Why doesn't the program allow for not closing?

*** EXPERIMENT: Need to pass pinning-arrays

*** EXPERIMENT change in rootdir don't help

*** ANALYSIS: Investigate why calibration step never ends

*** GS after calibration doesn't seem to match correct place... scaling or im-flipping?

*** TYPE issues with resource config files (fixtures)

*** SCAN IMAGE IN FIX CALIBRATION OF NEW FIXTURE!

*** FIXTURE: Add so conf has its own name

*** CALIBRATION: Fixtures' analysis of GS indices is written badly to config
    Maybe due to being array?

*** Images show distinct blob-detection failiour at early stages using
    current detection algorithms

*** Investigate only using the inter-quartile part of signal at
    grid-placement to calculate the otsu-threshold.

*** User needs to know if the analysis-script is working...

*** Check Pattern-finding if it doesn't demand one too many intervals for optimal curve-start
    -> Seems so, line 244 in resource_signal, changed the while statement 'n' >>> '(n-1)'

*** Check how time of steapest curve correlates with blob engulfing aura

*** Check so each grid cell actually has its data at all times (the summary image looks bad).

*** Analysis One should allow for any space.

*** Fixture should respond to what fixture is selected in start experiment!

*** Fixture causes file-crash if conf-file not correct.

*** Fixture creation requires program restart(s) to work properly

*** Make experiment last until analysis of last image is done

*** Abort button on running experiment

(*** Extend functionality in fixture view (Cell calibration))

*** Implement reusable canvases everywhere, look in analysis.py

*** Fixture: Re-implement all functionality.

--- Kodak > Cell Estimate Space ---
---

*** Fixture is nicer

*** Make it possible to monitor the gray-scale values

*** Using the vectors, fit a 3-5 deg polynomial with positive co-effs such
    that the sum of the vector's Y-values equals the measured cell count value

*** Once a curve for all measures have been fitted, reproduce the cell count by
    selecting the blobs (Note this is proximate to circular)

*** Mark data by time-point of sampling

*** Collect new calibration data to verify the goodness of the calibration

*** In subracting background:mean disallow negative values (blobs being pos)

*** Make cells count as positives in Kodak space (* -1)

*** Make calibration.data contain vector of all pixels as a hashed table

*** Make stress test unit that randomly deletes detected peaks before
    grid placement

*** Calculate the distance of grid jumping one signal peak unit
    Use for R-threshold (make sure R is per blob).

*** Make it possible to reuse canvases please <- maybe baby

*** Check if OpenCV is installed and if not, use fallback analysis

*** Check so that the grid-cell has appropriate size

*** Remake gray-scale so that it uses Kodak Z-values

*** CHECK INTERPOLATION

*** Change to user specifying output dir - not file

*** Make script save grid-placement as a file for certain time-points.

*** Report building takes about as long as analysis when processing a project
    Look at appending sections

*** Check why not analysing all plates???

*** Grayscale norm!

*** Solve eq for grayscale fransformation...

*** Remake entire Fixture GUI image selection handling
    Make it possible to select areas again

*** See why not log_writer produces a progress.png in the right place

*** Make project check <- What does that mean?

*** Make creation of log-file post-scanning produce everythin that on-the-fly
   production does except first entry...

*** Make Analyse One more according to new ways of Fixture

*** Fix log-file from scanning, see upload on server.

*** Make a config file setting GUI

*** Capture mouse events on canvases from matplotlib instead of using images

*** Make a single analysis interface

*** Make scan one be an experiment, easier to use the same pipe

*** Cut out all the different parts to separate files in src

*** Get all pattern from config file

*** Do grayscale detection in 600dpi, it is way too nice and smooth in 150dpi

*** Make interface label-show width nice

*** Include all the coordinates for all subsections on all images in 
   logfile.

*** Grayscale module
*   other way of finding indices
        cutoff = 1.0
        indices = ml.find(D > cutoff) 
*   should it be a mean(mean()) or just a mean(2d)

*** Use 1 scanner fixture settings per scanner fixture
    Not implemented as such but now analyis reloads settings

*** Make 'Scan one' nicer

*** Lock scanners so that you cannot scan when it's working

*** Make app take two types of directories:
        App-directory
        Save-data directory

*** Make Grayscale x-pos offset so that first is 0 otherwise will depend on things..
   Also make the x-pos be devided by meandist

*** Restructure Image Analysis into nicer parts

*** Fix launching so that it works from other directories

*** The Fixture confile must save the fixture marking path

*** SISPMCTF
* Make sure user really has the right priveleges

***Set minimum scanning interval to 7minutes if rescan enabled else 4minutes

***Fixture should have crashed head dummy-marking

*** This seems to not have had anything cool in it...
http://www.epson.com/cgi-bin/Store/support/supDetail.jsp?oid=66172&prodoid=63056499&BV_UseBVCookie=yes&infoType=Downloads&platform=Other&x=3&y=0

*** Make sure the scanning is run in seperate thread but send event when done
*   DONE: Separate thread, but no callback active yet
*   I think it is done

*** Fix histograms for linux:
*   Fix axis etc so that picture is small as possible
        plt.xlim([0,255])       <- Should depend on pixel depth

*** SANE
*   sane-find-scanner -q devname
*   IF usb-problem: http://www.sane-project.org/README.linux
*   scanimage/epson/sane-epson
*   scanimage -d 'epson2:libusb:001:006' -f tiff --mode Gray --depth 12 --resolution 600.0 --auto-area-segmentation no -l 0.0 -t 0.0 -x 10.0 -y 12.0 --source TPU --focus-position "Focus 2.5mm above glass"
*   scanimage -d [dev] --dont-scan
*   scanimage --all-options
*   scanimage -d 'epson2:libusb:001:006' --mode Gray --depth 16 --resolution 600 --source 'Transparaency Unit'
*   scanimage --format tiff --resolution 600 --mode Gray --source Transparency -l 0 -t 0 -x 215.9 -y 297.18 --depth 16 > test.tiff
*   Compliing: ./configure --prefix=/home/martin/SANE_dev
*   Run scanimage in bin-directory created above.
*   Diff reporting: diff . ../../sane-backends-1.0.22/backend/ | grep -v -e"^Only in"
